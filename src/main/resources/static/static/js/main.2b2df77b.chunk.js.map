{"version":3,"sources":["action/priceActions.js","components/QuantityBox.js","components/ProductContainer.js","components/BuildingBlock.js","API.js","views/Homepage.js","components/Navbar.js","components/AdminPageComponent.js","views/AdminPage.js","views/About.js","views/Contact.js","App.js","reducer/priceReducer.js","index.js"],"names":["price","type","payload","QuantityBox","props","useState","currentQuantity","setcurrentQuantity","negativeIsClickable","setnegativeIsClickable","changeQuantity","amount","useEffect","changeCurrentQuantity","className","onClick","bind","icon","faPlus","size","color","faMinus","ProductContainer","dispatch","useDispatch","priceActions","hasQuantity","src","linkToImage","alt","style","margin","padding","maxWidth","productName","listStyleType","toFixed","href","linkToProduct","vendorName","marginTop","manufacturer","layoutSize","material","switchColor","newAmount","styles","clickableButton","cursor","notClickableButton","BuildingBlock","currentProductContainer","setcurrentProductContainer","productContainers","setproductContainers","leftIsClickable","setleftIsClickable","rightIsClickable","setrightIsClickable","extractData","data","tempProductContainers","map","product","push","length","updateCurrentProductContainer","axios","get","getDataFrom","then","res","Object","assign","marginLeft","alignSelf","faChevronLeft","marginRight","faChevronRight","API","login","me","getcsrf","test","addKeycap","getAllKeycaps","addSwitch","getAllSwitches","addPlate","getAllPlates","addStabilizer","getAllStabilizers","addPCB","getAllPCBs","addKeyboardCase","getAllKeyboardCases","Homepage","currentTotalPrice","useSelector","state","Navbar","exact","to","activeClassName","AdminPageComponent","onUpdate","url","this","submitURL","method","withCredentials","formData","headers","_csrf","token","tempData","fields","field","e","setState","target","name","value","key","onChange","width","height","htmlFor","submitProduct","componentName","Component","AdminPage","parameterName","alert","console","log","extractToken","fulltoken","split","isInRole","getLoginStatus","action","display","flexDirection","id","border","About","fontWeight","title","frameborder","allow","allowfullscreen","marhinTop","Contact","fontSize","App","path","component","priceReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b2df77b.chunk.js","sourcesContent":["const setPrice = price => {\r\n\treturn {\r\n\t\ttype: \"SET_PRICE\",\r\n\t\tpayload: { price },\r\n\t};\r\n};\r\n\r\nconst increasePriceBy = price => {\r\n\treturn {\r\n\t\ttype: \"INC_PRICE\",\r\n\t\tpayload: { price },\r\n\t};\r\n};\r\n\r\nconst decreasePriceBy = price => {\r\n\treturn {\r\n\t\ttype: \"DEC_PRICE\",\r\n\t\tpayload: { price },\r\n\t};\r\n};\r\n\r\nexport default { setPrice, increasePriceBy, decreasePriceBy };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../css/QuantityBox.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst QuantityBox = props => {\r\n\tconst iconSize = \"2x\";\r\n\r\n\tconst [currentQuantity, setcurrentQuantity] = useState(props.currentQuantity);\r\n\tconst [negativeIsClickable, setnegativeIsClickable] = useState(true);\r\n\r\n\tconst changeQuantity = amount => {\r\n\t\tif (currentQuantity + amount >= 0) {\r\n\t\t\tsetcurrentQuantity(currentQuantity + amount);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.changeCurrentQuantity(currentQuantity);\r\n\r\n\t\tif (currentQuantity === 0) {\r\n\t\t\tsetnegativeIsClickable(false);\r\n\t\t} else {\r\n\t\t\tif (!negativeIsClickable) {\r\n\t\t\t\tsetnegativeIsClickable(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [currentQuantity]);\r\n\r\n\treturn (\r\n\t\t<div className=\"quantity-box-container\">\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"quantity-button\" onClick={changeQuantity.bind(this, 1)}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size={iconSize} color=\"#b58db8\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"quantity-container unselectable\">QUANTITY~{currentQuantity}</div>\r\n\t\t\t\t<div className=\"quantity-button\" onClick={changeQuantity.bind(this, -1)}>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={faMinus}\r\n\t\t\t\t\t\tsize={iconSize}\r\n\t\t\t\t\t\tcolor={negativeIsClickable ? \"#b58db8\" : \"gray\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuantityBox;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"../css/ProductContainer.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport priceActions from \"../action/priceActions\";\r\nimport QuantityBox from \"./QuantityBox\";\r\n\r\nconst ProductContainer = props => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [currentQuantity, setcurrentQuantity] = useState(1);\r\n\r\n\tconst changeCurrentQuantity = newAmount => {\r\n\t\tsetcurrentQuantity(newAmount);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//when the component mounts, increase the price by its price\r\n\t\tdispatch(\r\n\t\t\tpriceActions.increasePriceBy(props.hasQuantity ? currentQuantity * props.price : props.price)\r\n\t\t);\r\n\r\n\t\t//when the component unmounts, decrease the price by its price\r\n\t\treturn function cleanup() {\r\n\t\t\tdispatch(\r\n\t\t\t\tpriceActions.decreasePriceBy(\r\n\t\t\t\t\tprops.hasQuantity ? currentQuantity * props.price : props.price\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t};\r\n\t}, [dispatch, props.price, currentQuantity]);\r\n\r\n\treturn (\r\n\t\t<div className=\"product-main-container\">\r\n\t\t\t<div className=\"product-image-container\">\r\n\t\t\t\t<img className=\"product-image unselectable\" src={props.linkToImage} alt=\"product\"></img>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"product-info-container\">\r\n\t\t\t\t<h2 className=\"product-name\" style={{ margin: \"0px\", padding: \"0px\", maxWidth: \"1000px\" }}>\r\n\t\t\t\t\t{props.productName}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div className=\"product-information\">\r\n\t\t\t\t\t<div className=\"product-information-box\">\r\n\t\t\t\t\t\t<ul style={{ listStyleType: \"none\", padding: \"0px\", margin: \"0px\" }}>\r\n\t\t\t\t\t\t\t{/* These are the fields that every product has */}\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<h2 style={{ margin: \"0px\", padding: \"0px\" }}>{\"$\" + props.price.toFixed(2)}</h2>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"link-to-product\" href={props.linkToProduct}>\r\n\t\t\t\t\t\t\t\t\t{props.vendorName}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t{/* These are the fields that only some product have, so we have to check */}\r\n\t\t\t\t\t\t\t<div style={{ marginTop: \"1rem\" }}>\r\n\t\t\t\t\t\t\t\t{/* (bool && Container) will render the Container only if the bool is true */}\r\n\t\t\t\t\t\t\t\t{props.manufacturer && (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"product-description-name\">Manufacturer:</span>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{props.manufacturer}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{props.layoutSize && (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"product-description-name\">Layout Size:</span>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{props.layoutSize + \"%\"}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{props.material && (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"product-description-name\">Material:</span> {props.material}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{props.switchColor && (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"product-description-name\">Switch Color:</span>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{props.switchColor}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{props.hasQuantity && (\r\n\t\t\t\t\t\t<div className=\"quantity-box\">\r\n\t\t\t\t\t\t\t<QuantityBox\r\n\t\t\t\t\t\t\t\tcurrentQuantity={currentQuantity}\r\n\t\t\t\t\t\t\t\tchangeCurrentQuantity={changeCurrentQuantity}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ProductContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../css/BuildingBlock.css\";\r\nimport ProductContainer from \"./ProductContainer\";\r\n\r\nconst BuildingBlock = props => {\r\n\t// Change the properties of both arrows here\r\n\tconst arrowIconSize = \"9x\";\r\n\tconst arrowMarginSize = \"7%\";\r\n\r\n\tconst [currentProductContainer, setcurrentProductContainer] = useState(0);\r\n\tconst [productContainers, setproductContainers] = useState([]);\r\n\r\n\tconst [leftIsClickable, setleftIsClickable] = useState(currentProductContainer !== 0);\r\n\tconst [rightIsClickable, setrightIsClickable] = useState(false);\r\n\r\n\tconst loadData = () => {\r\n\t\taxios.get(props.getDataFrom).then(res => extractData(res.data));\r\n\t};\r\n\r\n\tconst extractData = data => {\r\n\t\tlet tempProductContainers = [];\r\n\r\n\t\t//for each product that we fetched from the server, create a ProductContainer component from it and\r\n\t\t//store that ProductContainer in the tempContainers, which then gets saved to the state later\r\n\t\tdata.map(product =>\r\n\t\t\ttempProductContainers.push(\r\n\t\t\t\t// Whenever we add new properties to Products in database, we have to update this here\r\n\t\t\t\t// Also we have to actually create a <li> element to show it inside of ProductContainer\r\n\t\t\t\t<ProductContainer\r\n\t\t\t\t\thasQuantity={props.hasQuantity}\r\n\t\t\t\t\tproductName={product.productName}\r\n\t\t\t\t\tlinkToImage={product.linkToImage}\r\n\t\t\t\t\tlinkToProduct={product.linkToProduct}\r\n\t\t\t\t\tvendorName={product.vendorName}\r\n\t\t\t\t\tprice={product.price}\r\n\t\t\t\t\t// The next properties can be undefined\r\n\t\t\t\t\tmaterial={product.material}\r\n\t\t\t\t\tmanufacturer={product.manufacturer}\r\n\t\t\t\t\tswitchColor={product.switchColor}\r\n\t\t\t\t\tlayoutSize={product.layoutSize}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t);\r\n\t\tif (tempProductContainers.length === 0 || tempProductContainers.length === 1) {\r\n\t\t\tsetrightIsClickable(false);\r\n\t\t}\r\n\t\tsetproductContainers(tempProductContainers);\r\n\t};\r\n\r\n\tconst updateCurrentProductContainer = amount => {\r\n\t\t//currentProductContainer must be between 0 and productContainers.length\r\n\t\tif (currentProductContainer + amount < productContainers.length) {\r\n\t\t\tif (currentProductContainer + amount >= 0) {\r\n\t\t\t\tsetcurrentProductContainer(currentProductContainer + amount);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tloadData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// If we are at the first element of the array, set the leftarrow to unclickable, otherwise make it clickable\r\n\t\t//also do the same for the right arrow and the last element of the array\r\n\t\t//This function only runs when currentProductContainer is updated\r\n\t\tif (currentProductContainer === 0) {\r\n\t\t\tsetleftIsClickable(false);\r\n\t\t} else {\r\n\t\t\tif (!leftIsClickable) {\r\n\t\t\t\tsetleftIsClickable(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (currentProductContainer === productContainers.length - 1) {\r\n\t\t\tsetrightIsClickable(false);\r\n\t\t} else {\r\n\t\t\tif (!rightIsClickable) {\r\n\t\t\t\tsetrightIsClickable(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [currentProductContainer]);\r\n\r\n\treturn (\r\n\t\t<div className=\"main-buildingblock-container\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"buildingblock-left-container\"\r\n\t\t\t\tstyle={Object.assign(\r\n\t\t\t\t\t{ marginLeft: arrowMarginSize, alignSelf: \"center\" },\r\n\t\t\t\t\tleftIsClickable ? styles.clickableButton : styles.notClickableButton\r\n\t\t\t\t)}\r\n\t\t\t\tonClick={updateCurrentProductContainer.bind(this, -1)}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\ticon={faChevronLeft}\r\n\t\t\t\t\tsize={arrowIconSize}\r\n\t\t\t\t\tcolor={leftIsClickable ? \"#b58db8\" : \"gray\"}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"buildingblock-content-container\">\r\n\t\t\t\t<div className=\"product-container\">{productContainers[currentProductContainer]}</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"buildingblock-right-container\"\r\n\t\t\t\tstyle={Object.assign(\r\n\t\t\t\t\t{ marginRight: arrowMarginSize, alignSelf: \"center\" },\r\n\t\t\t\t\trightIsClickable ? styles.clickableButton : styles.notClickableButton\r\n\t\t\t\t)}\r\n\t\t\t\tonClick={updateCurrentProductContainer.bind(this, 1)}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\ticon={faChevronRight}\r\n\t\t\t\t\tsize={arrowIconSize}\r\n\t\t\t\t\tcolor={rightIsClickable ? \"#b58db8\" : \"gray\"}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Change the margin of both arrows here\r\n\r\nconst styles = {\r\n\tclickableButton: {\r\n\t\tcursor: \"pointer\",\r\n\t},\r\n\tnotClickableButton: {\r\n\t\tcursor: \"default\",\r\n\t},\r\n};\r\n\r\nexport default BuildingBlock;\r\n","//This is the URL of the server where all the axios requests will be headed\r\n// const SERVER_URL = \"http://192.168.1.105:8080/api\";\r\nconst SERVER_URL = \"\";\r\n\r\nconst API = {\r\n\tlogin: \"/login\",\r\n\tme: SERVER_URL + \"/api/me\",\r\n\tgetcsrf: SERVER_URL + \"/api/getcsrf\",\r\n\ttest: SERVER_URL + \"/api/test\",\r\n\taddKeycap: SERVER_URL + \"/api/addkeycap\",\r\n\tgetAllKeycaps: SERVER_URL + \"/api/getallkeycaps\",\r\n\taddSwitch: SERVER_URL + \"/api/addswitch\",\r\n\tgetAllSwitches: SERVER_URL + \"/api/getallswitches\",\r\n\taddPlate: SERVER_URL + \"/api/addplate\",\r\n\tgetAllPlates: SERVER_URL + \"/api/getallplates\",\r\n\taddStabilizer: SERVER_URL + \"/api/addstabilizer\",\r\n\tgetAllStabilizers: SERVER_URL + \"/api/getallstabilizers\",\r\n\taddPCB: SERVER_URL + \"/api/addpcb\",\r\n\tgetAllPCBs: SERVER_URL + \"/api/getallpcbs\",\r\n\taddKeyboardCase: SERVER_URL + \"/api/addkeyboardcase\",\r\n\tgetAllKeyboardCases: SERVER_URL + \"/api/getallkeyboardcases\",\r\n};\r\n\r\nexport default API;\r\n","import React from \"react\";\r\n\r\nimport \"../css/Homepage.css\";\r\nimport BuildingBlock from \"../components/BuildingBlock\";\r\nimport API from \"../API\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Homepage = () => {\r\n\tconst currentTotalPrice = useSelector(state => state);\r\n\r\n\treturn (\r\n\t\t<div className=\"main-homepage-container\">\r\n\t\t\t<div className=\"homepage-container-child\">\r\n\t\t\t\t<BuildingBlock getDataFrom={API.getAllKeycaps} hasQuantity={false} />\r\n\t\t\t</div>\r\n\t\t\t{/* <div className=\"homepage-container-child\">ad</div> */}\r\n\t\t\t<div className=\"homepage-container-child\">\r\n\t\t\t\t<BuildingBlock getDataFrom={API.getAllSwitches} hasQuantity={true} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"homepage-container-child\">\r\n\t\t\t\t<BuildingBlock getDataFrom={API.getAllPlates} hasQuantity={false} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"homepage-container-child\">\r\n\t\t\t\t<BuildingBlock getDataFrom={API.getAllStabilizers} hasQuantity={false} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"homepage-container-child\">\r\n\t\t\t\t<BuildingBlock getDataFrom={API.getAllPCBs} hasQuantity={false} />\r\n\t\t\t</div>\r\n\t\t\t{/* <div className=\"homepage-container-child\">ad</div> */}\r\n\t\t\t<div className=\"homepage-container-child\">\r\n\t\t\t\t<BuildingBlock getDataFrom={API.getAllKeyboardCases} hasQuantity={false} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"price homepage-container-child unselectable\">\r\n\t\t\t\t<h2 style={{ padding: \"0px\", margin: \"0px\" }}>\r\n\t\t\t\t\tTotal Price: ${currentTotalPrice.toFixed(2)}\r\n\t\t\t\t</h2>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../css/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<div className=\"main-navbar-container\">\r\n\t\t\t\t<div className=\"navbar-logo-container\">\r\n\t\t\t\t\t<h1 className=\"navbar-logo\" style={{ margin: \"0px\", padding: \"0px\" }}>\r\n\t\t\t\t\t\t{/* TODO: Get a an actual logo and put it here */}\r\n\t\t\t\t\t\tKeeBuild\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"navbar-navigation-links-container\">\r\n\t\t\t\t\t<NavLink exact to=\"/\" activeClassName=\"navbar-link-active\" className=\"navbar-link\">\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink exact to=\"/about\" activeClassName=\"navbar-link-active\" className=\"navbar-link\">\r\n\t\t\t\t\t\tAbout\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink exact to=\"/contact\" activeClassName=\"navbar-link-active\" className=\"navbar-link\">\r\n\t\t\t\t\t\tContact\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AdminPageComponent extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {};\r\n\r\n\t\tthis.onUpdate = this.onUpdate.bind(this);\r\n\t}\r\n\tsubmitProduct() {\r\n\t\taxios({\r\n\t\t\turl: this.props.submitURL,\r\n\t\t\tmethod: \"POST\",\r\n\t\t\twithCredentials: true,\r\n\t\t\tdata: this.formData(),\r\n\t\t\theaders: {\r\n\t\t\t\t\"X-CSRF-TOKEN\": this.props._csrf.token,\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\tformData() {\r\n\t\tlet tempData = {};\r\n\t\tthis.props.fields.map(field => (tempData[field] = this.state[field]));\r\n\t\treturn tempData;\r\n\t}\r\n\tonUpdate(e) {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.fields.map(field => {\r\n\t\t\t\t\t// For each field, create a <input />, at the end create a button which will submit the product to the server\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div style={{ marginTop: \"15px\" }} key={field}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname={field}\r\n\t\t\t\t\t\t\t\tonChange={this.onUpdate}\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"50%\", height: \"2em\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label htmlFor={field}>{field}</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<button onClick={this.submitProduct.bind(this)}>submit {this.props.componentName}</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport API from \"../API\";\r\nimport AdminPageComponent from \"../components/AdminPageComponent\";\r\n\r\nexport default class AdminPage extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\t_csrf: {\r\n\t\t\t\tparameterName: \"\",\r\n\t\t\t\ttoken: \"\",\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\tgetLoginStatus() {\r\n\t\taxios.get(API.me).then(res => {\r\n\t\t\tres.data.length === 0 ? alert(\"not logged in\") : alert(\"LOGGED IN!!\");\r\n\t\t\tconsole.log(res.data);\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\taxios.get(API.getcsrf).then(res => this.extractToken(res.data));\r\n\t}\r\n\r\n\textractToken(fulltoken) {\r\n\t\tconst parameterName = fulltoken.split(\":\")[0];\r\n\t\tconst token = fulltoken.split(\":\")[1];\r\n\t\tthis.setState({\r\n\t\t\t_csrf: {\r\n\t\t\t\tparameterName,\r\n\t\t\t\ttoken,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\tisInRole() {\r\n\t\taxios.get(\"/api/isinrole\").then(res => console.log(res.data));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={this.isInRole.bind(this)}>Is in admin</button>\r\n\t\t\t\t<button onClick={this.getLoginStatus.bind(this)}>Get logged status</button>\r\n\t\t\t\t<form action={API.login} method=\"POST\">\r\n\t\t\t\t\t<div className=\"form-container\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"form-username-container\"\r\n\t\t\t\t\t\t\tstyle={{ display: \"flex\", flexDirection: \"column\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"username\" className=\"label username-label\">\r\n\t\t\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input type=\"text\" id=\"username\" name=\"username\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"form-password-container\"\r\n\t\t\t\t\t\t\tstyle={{ display: \"flex\", flexDirection: \"column\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"label password-label\">\r\n\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"password\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"hidden\"\r\n\t\t\t\t\t\t\t\tname={this.state._csrf.parameterName}\r\n\t\t\t\t\t\t\t\tvalue={this.state._csrf.token}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"submit-button-container\">\r\n\t\t\t\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Sign In\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>NOTES FOR FUTURE ADDITIONS TO THE DATABASE:</h1>\r\n\t\t\t\t\t<p>---need to be logged in to post products to the database</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t---you can check if you're logged in with the Get logged status button, which prints to\r\n\t\t\t\t\t\tthe console\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t---PRICE is always a number, the currency icon, $ in this case, will get added later in\r\n\t\t\t\t\t\tthe frontend.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t---LINK TO IMAGE is always a DIRECT link to the image which is already hosted somewhere\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>---LAYOUT SIZE is a NUMBER, it can be 40,60,80,75 and etc.</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ border: \"3px solid black\", padding: \"15px\", margin: \"5px\" }}>\r\n\t\t\t\t\t<h1>KEYCAP</h1>\r\n\t\t\t\t\t{/* This component takes in all the needed fields, created a <input /> for each field,\r\n\t\t\t\t\tand a button which POSTs the entered data to the submitURL*/}\r\n\t\t\t\t\t<AdminPageComponent\r\n\t\t\t\t\t\tcomponentName=\"KEYCAP\"\r\n\t\t\t\t\t\tfields={[\r\n\t\t\t\t\t\t\t\"linkToImage\",\r\n\t\t\t\t\t\t\t\"linkToProduct\",\r\n\t\t\t\t\t\t\t\"vendorName\",\r\n\t\t\t\t\t\t\t\"material\",\r\n\t\t\t\t\t\t\t\"price\",\r\n\t\t\t\t\t\t\t\"productName\",\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t_csrf={this.state._csrf}\r\n\t\t\t\t\t\tsubmitURL={API.addKeycap}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ border: \"3px solid black\", padding: \"15px\", margin: \"5px\" }}>\r\n\t\t\t\t\t<h1>SWITCH</h1>\r\n\t\t\t\t\t<AdminPageComponent\r\n\t\t\t\t\t\tcomponentName=\"SWITCH\"\r\n\t\t\t\t\t\tfields={[\r\n\t\t\t\t\t\t\t\"linkToImage\",\r\n\t\t\t\t\t\t\t\"linkToProduct\",\r\n\t\t\t\t\t\t\t\"price\",\r\n\t\t\t\t\t\t\t\"productName\",\r\n\t\t\t\t\t\t\t\"vendorName\",\r\n\t\t\t\t\t\t\t\"manufacturer\",\r\n\t\t\t\t\t\t\t\"switchColor\",\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t_csrf={this.state._csrf}\r\n\t\t\t\t\t\tsubmitURL={API.addSwitch}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ border: \"3px solid black\", padding: \"15px\", margin: \"5px\" }}>\r\n\t\t\t\t\t<h1>PLATE</h1>\r\n\t\t\t\t\t<AdminPageComponent\r\n\t\t\t\t\t\tcomponentName=\"PLATE\"\r\n\t\t\t\t\t\tfields={[\r\n\t\t\t\t\t\t\t\"linkToImage\",\r\n\t\t\t\t\t\t\t\"linkToProduct\",\r\n\t\t\t\t\t\t\t\"price\",\r\n\t\t\t\t\t\t\t\"productName\",\r\n\t\t\t\t\t\t\t\"vendorName\",\r\n\t\t\t\t\t\t\t\"layoutSize\",\r\n\t\t\t\t\t\t\t\"material\",\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t_csrf={this.state._csrf}\r\n\t\t\t\t\t\tsubmitURL={API.addPlate}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ border: \"3px solid black\", padding: \"15px\", margin: \"5px\" }}>\r\n\t\t\t\t\t<h1>STABILIZER</h1>\r\n\t\t\t\t\t<AdminPageComponent\r\n\t\t\t\t\t\tcomponentName=\"STABILIZER\"\r\n\t\t\t\t\t\tfields={[\r\n\t\t\t\t\t\t\t\"linkToImage\",\r\n\t\t\t\t\t\t\t\"linkToProduct\",\r\n\t\t\t\t\t\t\t\"price\",\r\n\t\t\t\t\t\t\t\"productName\",\r\n\t\t\t\t\t\t\t\"vendorName\",\r\n\t\t\t\t\t\t\t\"manufacturer\",\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t_csrf={this.state._csrf}\r\n\t\t\t\t\t\tsubmitURL={API.addStabilizer}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ border: \"3px solid black\", padding: \"15px\", margin: \"5px\" }}>\r\n\t\t\t\t\t<h1>PCB</h1>\r\n\t\t\t\t\t<AdminPageComponent\r\n\t\t\t\t\t\tcomponentName=\"PCB\"\r\n\t\t\t\t\t\tfields={[\r\n\t\t\t\t\t\t\t\"linkToImage\",\r\n\t\t\t\t\t\t\t\"linkToProduct\",\r\n\t\t\t\t\t\t\t\"price\",\r\n\t\t\t\t\t\t\t\"productName\",\r\n\t\t\t\t\t\t\t\"vendorName\",\r\n\t\t\t\t\t\t\t\"layoutSize\",\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t_csrf={this.state._csrf}\r\n\t\t\t\t\t\tsubmitURL={API.addPCB}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ border: \"3px solid black\", padding: \"15px\", margin: \"5px\" }}>\r\n\t\t\t\t\t<h1>KB CASE</h1>\r\n\t\t\t\t\t<AdminPageComponent\r\n\t\t\t\t\t\tcomponentName=\"KB CASE\"\r\n\t\t\t\t\t\tfields={[\r\n\t\t\t\t\t\t\t\"linkToImage\",\r\n\t\t\t\t\t\t\t\"linkToProduct\",\r\n\t\t\t\t\t\t\t\"price\",\r\n\t\t\t\t\t\t\t\"productName\",\r\n\t\t\t\t\t\t\t\"vendorName\",\r\n\t\t\t\t\t\t\t\"layoutSize\",\r\n\t\t\t\t\t\t\t\"material\",\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t_csrf={this.state._csrf}\r\n\t\t\t\t\t\tsubmitURL={API.addKeyboardCase}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"../css/About.css\";\r\n\r\nconst About = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"about-page-content\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>Please note:</span> The prices listed on the site\r\n\t\t\t\t\t\tmight not be 100% correct, as I can not know when a site is having a sale or when they\r\n\t\t\t\t\t\tchange their price. Also, I can not check if a item is in stock or not, so please check\r\n\t\t\t\t\t\tout the linked site for more information.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p style={{ padding: \"0px\", margin: \"0px\" }}>\r\n\t\t\t\t\t{/* TODO: Spell check this */}\r\n\t\t\t\t\tWelcome to the world of mechanical keyboards! This website should help you in picking your\r\n\t\t\t\t\tparts for your next mechanical keyboard build. If you look around the internet, it seems\r\n\t\t\t\t\tas if there's an infinite amount of parts to choose from. The point of my site is to\r\n\t\t\t\t\treduce that amount and not to overwhelm you with parts. <br />\r\n\t\t\t\t\tOn the Home page, you're going to find all the parts that you're going to need to build a\r\n\t\t\t\t\tkeyboard. Those are as follows: keycaps, switches, plate, PCB, stabilizers and a case.\r\n\t\t\t\t\tThere are many more piece that you might want like o-rings, LEDs and etc., but those\r\n\t\t\t\t\taren't mandatory so we aren't going to focus on them right now. <br />\r\n\t\t\t\t\tOnce you finally get all your parts, it's time to assemble your keyboard! Unless you went\r\n\t\t\t\t\twith a hotswappable PCB, you're going to need a soldering iron. You're also going to need\r\n\t\t\t\t\ta screwdriver. Once you finally have everything you need, you can start looking at videos\r\n\t\t\t\t\ton YouTube on how to build a keyboard. It really shouldn't be too hard, it's almost as if\r\n\t\t\t\t\tyou're making a sandwich, with keyboard parts.\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<h3 style={{ marginTop: \"55px\" }}>Here are some good videos:</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<iframe\r\n\t\t\t\t\t\ttitle=\"First video\"\r\n\t\t\t\t\t\twidth=\"560\"\r\n\t\t\t\t\t\theight=\"315\"\r\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/JpV-eJNrXjk\"\r\n\t\t\t\t\t\tframeborder=\"0\"\r\n\t\t\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n\t\t\t\t\t\tallowfullscreen\r\n\t\t\t\t\t></iframe>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div>Ad</div> */}\r\n\t\t\t\t<div style={{ marhinTop: \"75px\" }}>\r\n\t\t\t\t\t<iframe\r\n\t\t\t\t\t\ttitle=\"Second video\"\r\n\t\t\t\t\t\twidth=\"560\"\r\n\t\t\t\t\t\theight=\"315\"\r\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/SABRc5qlnuk\"\r\n\t\t\t\t\t\tframeborder=\"0\"\r\n\t\t\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n\t\t\t\t\t\tallowfullscreen\r\n\t\t\t\t\t></iframe>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t\t<div style={{ margin: \"0px 23%\", fontSize: \"18px\" }}>\r\n\t\t\t<p>\r\n\t\t\t\tYou can reach me with any questions or concerns at the following e-mail:\r\n\t\t\t\t<span style={{ fontWeight: \"bold\" }}> randomseller38@gmail.com</span>\r\n\t\t\t</p>\r\n\t\t\t<p>This website does not collect nor store any kind of data from the user.</p>\r\n\t\t\t<div style={{ display: \"flex\", flexDirection: \"row\", fontSize: \"12px\" }}>\r\n\t\t\t\t<p>Help me buy a new keyboard~</p>\r\n\t\t\t\t<div style={{ alignSelf: \"center\" }}>\r\n\t\t\t\t\t<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\r\n\t\t\t\t\t\t<input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\r\n\t\t\t\t\t\t<input type=\"hidden\" name=\"hosted_button_id\" value=\"CMJJXYY5793Y4\" />\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"image\"\r\n\t\t\t\t\t\t\tsrc=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif\"\r\n\t\t\t\t\t\t\tborder=\"0\"\r\n\t\t\t\t\t\t\tname=\"submit\"\r\n\t\t\t\t\t\t\ttitle=\"PayPal - The safer, easier way to pay online!\"\r\n\t\t\t\t\t\t\talt=\"Donate with PayPal button\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\tborder=\"0\"\r\n\t\t\t\t\t\t\tsrc=\"https://www.paypal.com/en_HR/i/scr/pixel.gif\"\r\n\t\t\t\t\t\t\twidth=\"1\"\r\n\t\t\t\t\t\t\theight=\"1\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Contact;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Homepage from \"./views/Homepage\";\nimport Navbar from \"./components/Navbar\";\nimport AdminPage from \"./views/AdminPage\";\nimport About from \"./views/About\";\nimport Contact from \"./views/Contact\";\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Navbar />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Homepage} />\n\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t<Route exact path=\"/contact\" component={Contact} />\n\t\t\t\t<Route exact path=\"/apiadminpage\" component={AdminPage} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","const priceReducer = (state = 0, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_PRICE\":\r\n\t\t\treturn action.payload.price;\r\n\r\n\t\tcase \"INC_PRICE\":\r\n\t\t\treturn state + action.payload.price;\r\n\r\n\t\tcase \"DEC_PRICE\":\r\n\t\t\treturn state - action.payload.price;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default priceReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport priceReducer from \"./reducer/priceReducer\";\n\nconst store = createStore(priceReducer);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}